spring.application.name=api-gateway
server.port=8080

# Routes Configuration
spring.cloud.gateway.routes[0].id=user-service
spring.cloud.gateway.routes[0].uri=http://localhost:8081
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/auth/**, /api/users/**
spring.cloud.gateway.routes[0].filters[0]=PreserveHostHeader=true

spring.cloud.gateway.routes[1].id=restaurant-service
spring.cloud.gateway.routes[1].uri=http://localhost:8082
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/restaurants/**, /api/menu-items/**, /api/reviews/**
spring.cloud.gateway.routes[1].filters[0]=Authentication

spring.cloud.gateway.routes[2].id=order-service
spring.cloud.gateway.routes[2].uri=http://localhost:8083
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/orders/**
spring.cloud.gateway.routes[2].filters[0]=Authentication

spring.cloud.gateway.routes[3].id=payment-service
spring.cloud.gateway.routes[3].uri=http://localhost:8084
spring.cloud.gateway.routes[3].predicates[0]=Path=/api/payments/**
spring.cloud.gateway.routes[3].filters[0]=Authentication

spring.cloud.gateway.routes[4].id=delivery-service
spring.cloud.gateway.routes[4].uri=http://localhost:8085
spring.cloud.gateway.routes[4].predicates[0]=Path=/api/deliveries/**
spring.cloud.gateway.routes[4].filters[0]=Authentication

spring.cloud.gateway.routes[5].id=notification-service
spring.cloud.gateway.routes[5].uri=http://localhost:8086
spring.cloud.gateway.routes[5].predicates[0]=Path=/api/notifications/**
spring.cloud.gateway.routes[5].filters[0]=Authentication

# JWT Configuration
jwt.secret=foodDeliveryPlatformSecretKeyForAllServices
jwt.expiration=86400000

# CORS Configuration
spring.cloud.gateway.globalcors.add-to-simple-url-handler-mapping=true
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedOrigins=http://localhost:5173
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedMethods=GET,POST,PUT,DELETE,PATCH,OPTIONS
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedHeaders=*
spring.cloud.gateway.globalcors.corsConfigurations.[/**].exposedHeaders=Authorization,Content-Type
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowCredentials=true
spring.cloud.gateway.globalcors.corsConfigurations.[/**].maxAge=3600

# Redis Configuration for Rate Limiting
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.data.redis.password=
spring.data.redis.database=0

# Rate Limiter Configuration
spring.cloud.gateway.default-filters[0]=RequestRateLimiter=10, 20, 1
spring.cloud.gateway.filter.request-rate-limiter.deny-empty-key=false
spring.cloud.gateway.filter.request-rate-limiter.empty-key-status-code=429
